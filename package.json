{
	"name": "go-inline-pgformatter",
	"displayName": "Go Inline-pgFormatter",
	"description": "Formats postgres SQL code found in strings in a .go file",
	"version": "1.0.0",
	"publisher": "passioinc",
	"galleryBanner": {
	  "theme": "dark",
	  "color": "#555555"
	},
	"icon": "logo.png",
	"author": {
		"name": "Alex Branton"
	},
	"engines": {
		"vscode": "^1.54.0"
	},
	"categories": [
		"Programming Languages",
		"Formatters",
		"Other"
	],
	"keywords": [
		"pgsql",
		"go",
		"golang",
		"string",
		"inline",
		"postgres",
		"PostgreSQL",
		"SQL",
		"Formatting"
	],
	"license": "MIT",
	"homepage": "https://github.com/Passiolife/go-inline-pgformatter",
	"repository": {
		"type": "git",
		"url": "https://github.com/Passiolife/go-inline-pgformatter"
	},
	"activationEvents": [
		"onCommand:go-inline-pgformatter.formatAllSql"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "go-inline-pgformatter.formatAllSql",
				"title": "Go - Inline Format pgSQL Strings"
			}
		],
		"configuration": {
			"title": "Go inline-pgFormatter",
			"properties": {
				"goPgFormat.pgFormatPath": {
					"type": "string",
					"description": "path to pg_format perl script"
				},
				"goPgFormat.matchSpacing": {
					"type": "bool",
					"default": true,
					"description": "try to match indentation-level of the assigned variable name"
				},
				"goPgFormat.addTabs": {
					"type": "int",
					"default": 1,
					"description": "after matching the variable indentation, add this many more tabs (disabled if matching is off)"
				},
				"goPgFormat.keywordCase": {
					"type": "string",
					"default": "2",
					"enum": [
						"0",
						"1",
						"2",
						"3"
					],
					"enumDescriptions": [
						"leaves all pgSql keywords in the casing they are currently in",
						"changes allpgSql keywords to lowercase",
						"changes allpgSql keywords to UPPERCASE",
						"changes allpgSql keywords to Capitalized"
					]
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.54.0",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.0",
		"@types/node": "14.x",
		"@typescript-eslint/eslint-plugin": "^5.16.0",
		"@typescript-eslint/parser": "^5.16.0",
		"eslint": "^8.11.0",
		"glob": "^7.2.0",
		"mocha": "^9.2.2",
		"typescript": "^4.5.5",
		"ts-loader": "^9.2.8",
		"webpack": "^5.70.0",
		"webpack-cli": "^4.9.2",
		"@vscode/test-electron": "^2.1.3"
	}
}